/*
 * This file was generated by the Gradle 'init' task.
 */

buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.2"
    }
}

group = 'com.balashoff'
version = '1.0.0'
description = 'mqtt-emulator'


apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}


dependencies {
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    implementation 'com.google.code.gson:gson:2.10.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
    implementation("org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5")
}



jar {
    manifest {
        attributes "Main-Class": "com.balashoff.Main"
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task buildFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.balashoff.Main'

    }

    baseName = 'mqtt-emulator'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

test {
    useJUnitPlatform()
}
